name: release-please

on:
  push:
    branches: [main]

jobs:
  release_please:
    name: Release Please
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
      actions: write
      statuses: write

    steps:
      - id: release
        uses: GoogleCloudPlatform/release-please-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          command: manifest

      - id: transform
        name: Massage output
        env:
          PATHS_RELEASED: ${{ steps.release.outputs.paths_released }}
        run: |
          ANY=$(echo $PATHS_RELEASED | jq '. | length | . > 0')
          CRATES=$(echo $PATHS_RELEASED | jq 'map(select(startswith("crates/"))) | length | . > 0')

          echo "ANY: $ANY"
          echo "CRATES: $CRATES"

          echo "::set-output name=any::$ANY"
          echo "::set-output name=crates::$CRATES"

      - name: Print outputs
        env:
          ANY: ${{ steps.transform.outputs.any }}
          CRATES: ${{ steps.transform.outputs.crates }}
          PATHS: ${{ steps.release.outputs.paths_released }}
        run: |
          echo "paths_released: '$PATHS'"
          echo "any: '$ANY'"
          echo "crates: '$CRATES'"

    outputs:
      paths_released: ${{ steps.release.outputs.paths_released }}
      crate_released: ${{ steps.transform.outputs.crates }}
      any_released: ${{ steps.transform.outputs.any }}

  release_crates:
    name: Release to crates.io
    runs-on: ubuntu-latest
    if: fromJSON(needs.release_please.outputs.crate_released)
    needs: release_please

    concurrency:
      group: release_crates

    steps:
      - name: Configure git
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global fetch.parallel 32

      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v1
      - name: Install cargo plugins
        run: cargo install cargo-workspaces
      - name: Publish
        run: cargo workspaces publish --from-git --yes --token "${{ secrets.CRATES_IO_TOKEN }}"

  release_image:
    name: Release docker image
    runs-on: ubuntu-latest
    if: fromJSON(needs.release_please.outputs.any_released)
    needs: release_please

    concurrency:
      group: release_image

    permissions:
      packages: write

    steps:
      - name: Configure git
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global fetch.parallel 32

      - uses: actions/checkout@v2
      - name: read version.txt
        run: |
          VERSION=$(cat version.txt)
          echo "VERSION=${VERSION}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - name: Docker login
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      # - name: Available platforms
      #   run: echo ${{ steps.buildx.outputs.platforms }}
      - uses: docker/build-push-action@v2
        with:
          push: true
          platforms: |
            linux/amd64
            linux/arm64
          tags: |
            ghcr.io/yolodev/3commas-scraper:latest
            ghcr.io/yolodev/3commas-scraper:v${VERSION}
